version: '3.8'

services:
  mongodb:
    image: mongo:6.0
    container_name: underwater_mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: underwater_admin_2024
      MONGO_INITDB_DATABASE: underwater_security
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - underwater_network

  backend:
    build:
      context: .
      dockerfile: deployment/Dockerfile.backend
    container_name: underwater_backend
    restart: unless-stopped
    environment:
      - MONGODB_URL=mongodb://admin:underwater_admin_2024@mongodb:27017/underwater_security?authSource=admin
      - REDIS_URL=redis://redis:6379
      - MODEL_PATH=/app/models
      - LOG_LEVEL=INFO
      - WORKERS=4
    ports:
      - "8000:8000"
    volumes:
      - ./models:/app/models
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    depends_on:
      - mongodb
      - redis
    networks:
      - underwater_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build:
      context: .
      dockerfile: deployment/Dockerfile.frontend
    container_name: underwater_frontend
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./deployment/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - backend
    networks:
      - underwater_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    container_name: underwater_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - underwater_network
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru

  # Optional: MongoDB Express for database management
  mongo-express:
    image: mongo-express:latest
    container_name: underwater_mongo_express
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: underwater_admin_2024
      ME_CONFIG_MONGODB_URL: mongodb://admin:underwater_admin_2024@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin
    depends_on:
      - mongodb
    networks:
      - underwater_network

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  underwater_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16